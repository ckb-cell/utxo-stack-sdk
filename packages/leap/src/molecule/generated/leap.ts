// This file is generated by @ckb-lumos/molecule, please do not modify it manually.
/* eslint-disable */
import { bytes, createBytesCodec, createFixedBytesCodec, molecule } from '@ckb-lumos/codec'
import { Uint32, Uint64, Uint128, DepType, HashType } from '../customized'
import {
  Byte32,
  Uint256,
  Bytes,
  BytesOpt,
  BytesOptVec,
  BytesVec,
  Byte32Vec,
  ProposalShortId,
  ProposalShortIdVec,
  Script,
  OutPoint,
  CellInput,
  CellDep,
  RawHeader,
  Header,
  UncleBlock,
  CellbaseWitness,
  WitnessArgs,
  ScriptOpt,
  UncleBlockVec,
  CellDepVec,
  CellInputVec,
  CellOutput,
  CellOutputVec,
  RawTransaction,
  Transaction,
  TransactionVec,
  Block,
  BlockV1,
} from './blockchain'

const { array, vector, union, option, struct, table, byteVecOf } = molecule

const fallbackBytesCodec = byteVecOf({ pack: bytes.bytify, unpack: bytes.hexify })

function createFallbackFixedBytesCodec(byteLength: number) {
  return createFixedBytesCodec({
    pack: bytes.bytify,
    unpack: bytes.hexify,
    byteLength,
  })
}

const byte = createFallbackFixedBytesCodec(1)

export const CrossChainQueue = table(
  {
    lockedAssets: Byte32,
    outbox: Byte32Vec,
    inbox: Byte32Vec,
  },
  ['lockedAssets', 'outbox', 'inbox'],
)

export const Transfer = struct(
  {
    ownerLockHash: Byte32,
    amount: Uint128,
    assetType: Byte32,
  },
  ['ownerLockHash', 'amount', 'assetType'],
)

export const Message = union(
  {
    Transfer,
  },
  ['Transfer'],
)

export const RequestContent = table(
  {
    requestType: byte,
    initialChainId: Bytes,
    targetChainId: Bytes,
    message: Message,
  },
  ['requestType', 'initialChainId', 'targetChainId', 'message'],
)

export const RequestLockArgs = table(
  {
    requestTypeHash: Byte32,
    ownerLockHash: Byte32,
    timeout: Uint64,
    content: RequestContent,
  },
  ['requestTypeHash', 'ownerLockHash', 'timeout', 'content'],
)

export const Request = table(
  {
    requestCell: OutPoint,
    requestContent: RequestContent,
  },
  ['requestCell', 'requestContent'],
)

export const Requests = vector(Request)
